What happens when you initialize a repository? Why do you need to do it?
Git is signalled that this is not just a directory, but a repository.
Otherwise every directory will have to be a repository.

How is the staging area different from the working directory and the
repository? What value do you think it offers?
The staging area allows flexibility in choosing exactly which files
should be included in a commit before actually doing it. It is a 
temporary snapshot of what is about to be commited in the repository.

How can you use the staging area to make sure you have one commit per 
logical change?
By checking changes in previous commits and in the working directory
you can be sure that only what you are interested in will be commited.

What are some situations when branches would be helpful in keeping your
history organized? How would branches help?
When trying to do experiments with new functionalities, but I want a 
stable version as a backup.

How do the diagrams help you visualize the branch structure?
It is easy to visualize the branches as all starting from one initial
commit.Also creating a branch from an old commit is reaaly cool.

What is the result of merging two branches together? Why do we
represent it in the diagram the way we do?
Merges the identical lines and any newly added lines. The ones removed
from the initial commit result in a conflict. The branches merge into 
the branch currently checked out.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing 
merges manually?
Git`s auto merge will work only in cases with no conflicts. If there are
conflicts it is best they are resolved by a person, rather than leaving
a machine guess which version should be kept.